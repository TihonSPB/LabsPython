# -*- coding: utf-8 -*-

# Устанавливается через консоль pip install flask
from flask import (
    Flask,          # Основной класс Flask - ядро приложения
    render_template, # Функция для рендеринга HTML-шаблонов
    url_for,        # Генератор URL для маршрутов и статических файлов, используется в шаблоне html
    request,       # Объект для работы с входящими HTTP-запросами
    redirect       # Функция для перенаправления на другие URL
)

# Импорт главного класса SQLAlchemy из расширения flask_sqlalchemy
# Устанавливается через консоль pip install flask-sqlalchemy
from flask_sqlalchemy import SQLAlchemy
"""
SQLAlchemy - это ORM (Object-Relational Mapping), который позволяет:
- Работать с базой данных через Python-объекты
- Автоматизировать создание/изменение таблиц
- Строить сложные запросы на Python (без чистого SQL)

Основные возможности:
- Создание моделей данных (Python-классы → таблицы БД)
- Управление сессиями и подключениями
- Миграции (с дополнительными расширениями)
- Поддержка разных СУБД: SQLite, PostgreSQL, MySQL и др.
"""

# Создаём объект app на основе класса Flask
# В конструктор передаём название основного файла. (__name__)
# __name__ нужен, чтобы Flask знал, где искать шаблоны (templates) и статические файлы (static).
app = Flask(__name__)

# __________________________________________
# !!!\\\|||/// Подключение к DB \\\|||///!!!


# Декоратор. '/' - связывает функцию с URL-адресом '/' (главная страница).
@app.route('/')
@app.route('/home')
# Пользователь заходит на главную страницу, Flask вызывает эту функцию.
def index():
    # Функция возвращает index.html, отобразится в браузере.
    return render_template("index.html")


@app.route('/test')
def test():
    return render_template("test.html")


# Проверяем, запущен ли скрипт напрямую (а не импортирован как модуль).
if __name__ == "__main__":
    # app.run() - Запускаем веб-сервер Flask.
    # Параметр debug=True включает:
    # 1) Автоперезагрузку сервера при изменении кода.
    # 2) Подробные ошибки в браузере (удобно для разработки).
    # При перебросе на сервер отключить отображение ошибок в браузере
    app.run(debug=True)